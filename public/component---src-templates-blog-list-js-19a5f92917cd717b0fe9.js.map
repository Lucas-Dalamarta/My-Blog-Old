{"version":3,"sources":["webpack:///./src/components/PostItem/styled.js","webpack:///./src/components/PostItem/index.js","webpack:///./src/components/Pagination/styled.js","webpack:///./src/components/Pagination/index.js","webpack:///./src/components/ListWrapper/styled.js","webpack:///./src/templates/blog-list.js"],"names":["PostItemLink","styled","Link","PostItemWrapper","section","PostItemTag","div","props","background","PostItemInfo","PostItemDate","time","PostItemTitle","h1","PostItemDescription","p","PostItem","slug","category","date","timeToRead","title","description","to","PaginationWrapper","Pagination","isFirst","isLast","currentPage","numPages","prevPage","nextPage","ListWrapper","query","BlogList","postList","data","allMarkdownRemark","edges","pageContext","Layout","map","node","frontmatter","fields"],"mappings":"8IAGaA,EAAeC,YAAOC,QAAV,2EAAGD,CAAH,2IAYZE,EAAkBF,IAAOG,QAAV,8EAAGH,CAAH,kMAcfI,EAAcJ,IAAOK,IAAV,0EAAGL,CAAH,oOAER,SAAAM,GAAK,OACjBA,EAAMC,WAAaD,EAAMC,WAAa,sBAe7BC,EAAeR,IAAOK,IAAV,2EAAGL,CAAH,4DAMZS,EAAeT,IAAOU,KAAV,2EAAGV,CAAH,uBAIZW,EAAgBX,IAAOY,GAAV,4EAAGZ,CAAH,2GAUba,EAAsBb,IAAOc,EAAV,kFAAGd,CAAH,uDCnCjBe,IA3BE,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAMT,EAAR,EAAQA,WAAYU,EAApB,EAAoBA,SAAUC,EAA9B,EAA8BA,KAAMC,EAApC,EAAoCA,WAAYC,EAAhD,EAAgDA,MAAOC,EAAvD,EAAuDA,YAAvD,OACf,kBAAC,EAAD,CAAgBC,GAAIN,GAClB,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAeT,WAAYA,GAAaU,GACxC,kBAAC,EAAD,KACE,kBAAC,EAAD,KAAiBC,EAAjB,MAA0BC,EAA1B,mBACA,kBAAC,EAAD,KACGC,GAEH,kBAAC,EAAD,KACGC,Q,oKCbEE,EAAoBvB,IAAOG,QAAV,4EAAGH,CAAH,gPC8BfwB,EA1BI,SAAC,GAAD,IACjBC,EADiB,EACjBA,QACAC,EAFiB,EAEjBA,OACAC,EAHiB,EAGjBA,YACAC,EAJiB,EAIjBA,SACAC,EALiB,EAKjBA,SACAC,EANiB,EAMjBA,SANiB,OAQjB,kBAAC,EAAD,MACIL,GAAW,kBAAC,OAAD,CAAMH,GAAIO,GAAV,qBACb,2BACGF,EADH,OACoBC,IAElBF,GAAU,kBAAC,OAAD,CAAMJ,GAAIQ,GAAV,sBCjBHC,EAAc/B,IAAOG,QAAV,sEAAGH,CAAH,6LCqDXgC,EAAK,aA0BHC,UAvEE,SAAA3B,GACf,IAAM4B,EAAW5B,EAAM6B,KAAKC,kBAAkBC,MADtB,EAGU/B,EAAMgC,YAAhCX,EAHgB,EAGhBA,YAAaC,EAHG,EAGHA,SACfH,EAA0B,IAAhBE,EACVD,EAASC,IAAgBC,EACzBC,EAAWF,EAAc,GAAM,EAAI,IAAxB,UAAuCA,EAAc,GAChEG,EAAQ,UAAYH,EAAc,GAExC,OACE,kBAACY,EAAA,EAAD,KACE,kBAAC,IAAD,CAAKnB,MAAM,SACX,kBAAC,EAAD,KACGc,EAASM,KACR,oBACEC,KADF,IAEIC,YAAenC,EAFnB,EAEmBA,WAAYU,EAF/B,EAE+BA,SAAUC,EAFzC,EAEyCA,KAAMG,EAF/C,EAE+CA,YAAaD,EAF5D,EAE4DA,MACxDD,EAHJ,EAGIA,WACUH,EAJd,EAII2B,OAAU3B,KAJd,OAOE,kBAACD,EAAA,EAAD,CACEC,KAAMA,EACNT,WAAYA,EACZU,SAAUA,EACVC,KAAMA,EACNC,WAAYA,EACZC,MAAOA,EACPC,YAAaA,QAKrB,kBAAC,EAAD,CACEI,QAASA,EACTC,OAAQA,EACRC,YAAaA,EACbC,SAAUA,EACVC,SAAUA,EACVC,SAAUA","file":"component---src-templates-blog-list-js-19a5f92917cd717b0fe9.js","sourcesContent":["import styled from \"styled-components\"\r\nimport { Link } from \"gatsby\"\r\n\r\nexport const PostItemLink = styled(Link)`\r\n  color: var(--texts);\r\n  display: flex;\r\n  text-decoration: none;\r\n  body#grid & {\r\n    background-color: var(--background);\r\n  }\r\n  &:hover {\r\n    color: var(--highlight);\r\n  }\r\n`\r\n\r\nexport const PostItemWrapper = styled.section`\r\n  align-items: center;\r\n  border-bottom: 1px solid var(--borders);\r\n  display: flex;\r\n  padding: 2rem 3rem;\r\n  width: 100%;\r\n  body#grid & {\r\n    border: none;\r\n    padding: 2rem 1rem;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n  }\r\n`\r\n\r\nexport const PostItemTag = styled.div`\r\n  align-items: center;\r\n  background: ${props =>\r\n    props.background ? props.background : \"var(--highlight)\"};\r\n  border-radius: 50%;\r\n  color: #fff;\r\n  display: flex;\r\n  font-size: 1.3rem;\r\n  font-weight: 700;\r\n  justify-content: center;\r\n  min-height: 90px;\r\n  min-width: 90px;\r\n  text-transform: uppercase;\r\n  body#grid & {\r\n    margin-bottom: 1.5rem;\r\n  }\r\n`\r\n\r\nexport const PostItemInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-left: 1.5rem;\r\n`\r\n\r\nexport const PostItemDate = styled.time`\r\n  font-size: 0.9rem;\r\n`\r\n\r\nexport const PostItemTitle = styled.h1`\r\n  font-size: 1.6rem;\r\n  font-weight: 700;\r\n  margin: 0.2rem 0 0.5rem;\r\n  body#grid & {\r\n    line-height: 1.1;\r\n    margin: 0.8rem 0;\r\n  }\r\n`\r\n\r\nexport const PostItemDescription = styled.p`\r\n  font-size: 1.2rem;\r\n  font-weight: 300;\r\n  line-height: 1.2;\r\n`\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nimport * as S from './styled'\r\n\r\nconst PostItem = ({slug, background, category, date, timeToRead, title, description}) => (\r\n  <S.PostItemLink to={slug}>\r\n    <S.PostItemWrapper>\r\n      <S.PostItemTag background={background}>{category}</S.PostItemTag>\r\n      <S.PostItemInfo>\r\n        <S.PostItemDate>{date} - {timeToRead} min de leitura</S.PostItemDate>\r\n        <S.PostItemTitle>\r\n          {title}\r\n        </S.PostItemTitle>\r\n        <S.PostItemDescription>\r\n          {description}\r\n        </S.PostItemDescription>\r\n      </S.PostItemInfo>\r\n    </S.PostItemWrapper>\r\n  </S.PostItemLink>\r\n)\r\n\r\nPostItem.propTypes = {\r\n  slug: PropTypes.string.isRequired,\r\n  background: PropTypes.string,\r\n  category: PropTypes.string.isRequired,\r\n  date: PropTypes.string.isRequired,\r\n  timeToRead: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  description: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default PostItem","import styled from \"styled-components\"\r\n\r\nexport const PaginationWrapper = styled.section`\r\n  align-items: center;\r\n  border-top: 1px solid var(--borders);\r\n  color: var(--texts);\r\n  display: flex;\r\n  padding: 1.5rem 3rem;\r\n  justify-content: space-between;\r\n  a {\r\n    color: var(--texts);\r\n    text-decoration: none;\r\n    transition: color 0.5s;\r\n    &:hover {\r\n      color: var(--highlight);\r\n    }\r\n  }\r\n`\r\n","import React from \"react\"\r\nimport propTypes from \"prop-types\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport * as S from \"./styled\"\r\n\r\nconst Pagination = ({\r\n  isFirst,\r\n  isLast,\r\n  currentPage,\r\n  numPages,\r\n  prevPage,\r\n  nextPage,\r\n}) => (\r\n  <S.PaginationWrapper>\r\n    {!isFirst && <Link to={prevPage}>← página anterior</Link>}\r\n    <p>\r\n      {currentPage} de {numPages}\r\n    </p>\r\n    {!isLast && <Link to={nextPage}>proxima página →</Link>}\r\n  </S.PaginationWrapper>\r\n)\r\n\r\nPagination.propTypes = {\r\n  isFirst: propTypes.bool.isRequired,\r\n  isLast: propTypes.bool.isRequired,\r\n  currentPage: propTypes.number.isRequired,\r\n  numPages: propTypes.number.isRequired,\r\n  prevPage: propTypes.string,\r\n  nextPage: propTypes.string,\r\n}\r\n\r\nexport default Pagination","import styled from \"styled-components\"\r\n\r\nexport const ListWrapper = styled.section`\r\n  body#grid & {\r\n    background-color: var(--borders);\r\n    border-bottom: 1px solid var(--borders);\r\n    display: grid;\r\n    grid-area: posts;\r\n    grid-gap: 1px;\r\n    grid-template-columns: repeat(auto-fit, minmax(380px, 1fr));\r\n  }\r\n`\r\n","import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/Layout\"\r\nimport SEO from \"../components/seo\"\r\nimport PostItem from \"../components/PostItem\"\r\nimport Pagination from \"../components/Pagination\"\r\n\r\nimport * as S from \"../components/ListWrapper/styled\"\r\n\r\nconst BlogList = props => {\r\n  const postList = props.data.allMarkdownRemark.edges\r\n\r\n  const { currentPage, numPages } = props.pageContext\r\n  const isFirst = currentPage === 1\r\n  const isLast = currentPage === numPages\r\n  const prevPage = currentPage - 1 === 1 ? \"/\" : `/page/${currentPage - 1}`\r\n  const nextPage = `/page/${currentPage + 1}`\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO title=\"Home\" />\r\n      <S.ListWrapper>\r\n        {postList.map(\r\n          ({\r\n            node: {\r\n              frontmatter: { background, category, date, description, title },\r\n              timeToRead,\r\n              fields: { slug },\r\n            },\r\n          }) => (\r\n            <PostItem\r\n              slug={slug}\r\n              background={background}\r\n              category={category}\r\n              date={date}\r\n              timeToRead={timeToRead}\r\n              title={title}\r\n              description={description}\r\n            />\r\n          )\r\n        )}\r\n      </S.ListWrapper>\r\n      <Pagination\r\n        isFirst={isFirst}\r\n        isLast={isLast}\r\n        currentPage={currentPage}\r\n        numPages={numPages}\r\n        prevPage={prevPage}\r\n        nextPage={nextPage}\r\n      />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query PostList($skip: Int!, $limit: Int!) {\r\n    allMarkdownRemark(\r\n      sort: { fields: frontmatter___date, order: DESC }\r\n      limit: $limit\r\n      skip: $skip\r\n    ) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            background\r\n            category\r\n            date(locale: \"pt-br\", formatString: \"DD [de] MMMM [de] YYYY\")\r\n            description\r\n            title\r\n          }\r\n          timeToRead\r\n          fields {\r\n            slug\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default BlogList\r\n"],"sourceRoot":""}